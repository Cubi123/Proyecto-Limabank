ggtsdisplay(residuals(fit_tiempo_espera),
main="ARIMA residuals")
agencia <- as.data.frame(coredata(xts_agencia))
data <- tk_augment_timeseries_signature(xts_agencia)
fit_lm_tiempo_espera <- stats::lm(TiempoEspera~.,data)
fit_lm_tiempo_espera
anova(fit_lm_tiempo_espera)
fit_lm <- lm(TiempoEspera~ArribosTotales+StaffTurnoTarde+half,data)
anova(fit_lm)
which(colnames(xts_agencia)=="half")
colnames(xts_agencia)
data <- tk_augment_timeseries_signature(xts_agencia)
data_arima <- cbind(xts_agencia,data$half)
class(data_arima)
colnames(data_arima)
data_arima <- cbind(xts_agencia,data$half)
fit_tiempo_espera <- auto.arima(data_arima$TiempoEspera,
xreg=data_arima[,c(1,3,10)])
summary(fit_tiempo_espera)
ggtsdisplay(arima.errors(fit_tiempo_espera),
main="ARIMA errors")
ggtsdisplay(residuals(fit_tiempo_espera),
main="ARIMA residuals")
checkresiduals(fit_tiempo_espera)
ggtsdisplay(arima.errors(fit_tiempo_espera),
main="ARIMA errors")
sample = sample.split(data, SplitRatio = .70)
library(caTools)
install.packages("caTools")
library(caTools)
library(pROC)
sample = sample.split(data, SplitRatio = .70)
sample
train = subset(csale, sample == TRUE)
test  = subset(csale, sample == FALSE)
sample = sample.split(data, SplitRatio = .80)
train = subset(csale, sample == TRUE)
sample = sample.split(data, SplitRatio = .80)
train = subset(data, sample == TRUE)
sample = sample.split(rownames(data), SplitRatio = .80)
train = subset(data, sample == TRUE)
sample = sample.split(rownames(data), SplitRatio = 0.8)
rownames(data)
data <- tk_augment_timeseries_signature(xts_agencia)
TiempoEspera <- xts_agencia$TiempoEspera
data_arima <- cbind(xts_agencia,data$half)
fit_tiempo_espera <- auto.arima(data_arima$TiempoEspera,
xreg=data_arima[,c(1,3,10)])
summary(fit_tiempo_espera)
checkresiduals(fit_tiempo_espera)
agencia <- as.data.frame(coredata(xts_agencia))
data <- tk_augment_timeseries_signature(xts_agencia)
fit_lm_tiempo_espera <- stats::lm(TiempoEspera~.,data)
fit_lm_tiempo_espera
anova(fit_lm_tiempo_espera)
fit_lm <- lm(TiempoEspera~ArribosTotales+StaffTurnoTarde+half,data)
anova(fit_lm)
sample = sample.split(rownames(data), SplitRatio = 0.8)
data
agenciasData <- coredata(data)
sample = sample.split(rownames(data), SplitRatio = 0.8)
sample = sample.split(rownames(agenciasData), SplitRatio = 0.8)
agenciasData
library(caTools)
sample = sample.split(agenciasData$TiempoEspera, SplitRatio = .80)
agenciasData$TiempoEspera
agenciasData
agenciasData <- as.matrix(data)
sample = sample.split(data$TiempoEspera, SplitRatio = .80)
train = subset(data, sample == TRUE)
test  = subset(data, sample == FALSE)
train
library(tidyverse)
library(clustMD)
library(skimr)
encode_categorical <- function(x, order = unique(x)) {
x <- as.numeric(factor(x, levels = order, exclude = NULL))
x
}
columna_dummy <- function(df, columna) {
df %>%
mutate_at(columna, ~paste(columna, eval(as.symbol(columna)), sep = "_")) %>%
mutate(valor = 1) %>%
spread(key = columna, value = valor, fill = 0)
}
crear_dummies <- function(df, nombres) {
map(c(nombres), columna_dummy, df = df) %>%
reduce(inner_join) %>%
select(-c(nombres))
}
data <- read_csv("LimaBank_Data_Grupo1.csv")
data_clean<- data%>%
select(-CODIGO_CLIENTE,-EDAD_2)
skim(data_clean)
continuos_variables <- c ('INGRESO','EDAD','SBS_DEUTOTAL','Banco1_DEUTOTAL',
'Banco2_DEUTOTAL','Banco3_DEUTOTAL','Banco4_DEUTOTAL',
'OTROS_DEUTOTAL','CANTIDAD_PRODUCTOS')
binary_variables <- c('FORMAL','FLG_SBS_201909','FLG_MD_NEGATIVO',
'FLG_DEUDASBS','FLG_SEGUROS','FLG_ACTIVOS',
'FLG_PASIVOS','FLG_INVERSION','FLG_PASIV_INV')
ordinal_variables <- c('EDU','DIGITAL','TIPNIVELEDUCACIONAL',
'PERFIL_VINCULACION','SEMENTO_RIESGO')
nominal_variables <- c('TIPESTCIVIL','CODPAISNACIONALIDAD'
,'DESTIPPROVINCIA','DIGITALIDAD')
orden_nivel_educacion <- c("ANA","NDI","PRI","SEC","FAR","TEI","TEC","SUP","BAC","LIC","TIT","MAE","DOC")
orden_vinculacion <- c("1. NADA VINCULADO","2. POCO VINCULADO",
"3. MEDIO VINCULADO","4. VINCULADO","5. MUY VINCULADO")
orden_riesgo <- c("A","B","C","D","E")
missing_continuos <- c('Banco1_DEUTOTAL','SBS_DEUTOTAL',
'Banco2_DEUTOTAL','Banco3_DEUTOTAL','Banco4_DEUTOTAL',
'OTROS_DEUTOTAL','CANTIDAD_PRODUCTOS')
index_na <- is.na(data_clean$SBS_DEUTOTAL)
data_clean$SBS_DEUTOTAL[index_na] <- mean(data_clean$SBS_DEUTOTAL[!index_na])
index_na <- is.na(data_clean$Banco1_DEUTOTAL)
data_clean$Banco1_DEUTOTAL[index_na] <- mean(data_clean$Banco1_DEUTOTAL[!index_na])
index_na <- is.na(data_clean$Banco2_DEUTOTAL)
data_clean$Banco2_DEUTOTAL[index_na] <- mean(data_clean$Banco2_DEUTOTAL[!index_na])
index_na <- is.na(data_clean$Banco3_DEUTOTAL)
data_clean$Banco3_DEUTOTAL[index_na] <- mean(data_clean$Banco3_DEUTOTAL[!index_na])
index_na <- is.na(data_clean$Banco4_DEUTOTAL)
data_clean$Banco4_DEUTOTAL[index_na] <- mean(data_clean$Banco4_DEUTOTAL[!index_na])
index_na <- is.na(data_clean$OTROS_DEUTOTAL)
data_clean$OTROS_DEUTOTAL[index_na] <- mean(data_clean$OTROS_DEUTOTAL[!index_na])
index_na <- is.na(data_clean$CANTIDAD_PRODUCTOS)
data_clean$CANTIDAD_PRODUCTOS[index_na] <- mean(data_clean$CANTIDAD_PRODUCTOS[!index_na])
write_csv(data_clean,"data_clean_noimput.csv",row.names=FALSE)
library(tidyverse)
library(clustMD)
library(skimr)
encode_categorical <- function(x, order = unique(x)) {
x <- as.numeric(factor(x, levels = order, exclude = NULL))
x
}
columna_dummy <- function(df, columna) {
df %>%
mutate_at(columna, ~paste(columna, eval(as.symbol(columna)), sep = "_")) %>%
mutate(valor = 1) %>%
spread(key = columna, value = valor, fill = 0)
}
crear_dummies <- function(df, nombres) {
map(c(nombres), columna_dummy, df = df) %>%
reduce(inner_join) %>%
select(-c(nombres))
}
data <- read_csv("LimaBank_Data_Grupo1.csv")
data_clean<- data%>%
select(-CODIGO_CLIENTE,-EDAD_2)
skim(data_clean)
continuos_variables <- c ('INGRESO','EDAD','SBS_DEUTOTAL','Banco1_DEUTOTAL',
'Banco2_DEUTOTAL','Banco3_DEUTOTAL','Banco4_DEUTOTAL',
'OTROS_DEUTOTAL','CANTIDAD_PRODUCTOS')
binary_variables <- c('FORMAL','FLG_SBS_201909','FLG_MD_NEGATIVO',
'FLG_DEUDASBS','FLG_SEGUROS','FLG_ACTIVOS',
'FLG_PASIVOS','FLG_INVERSION','FLG_PASIV_INV')
ordinal_variables <- c('EDU','DIGITAL','TIPNIVELEDUCACIONAL',
'PERFIL_VINCULACION','SEMENTO_RIESGO')
nominal_variables <- c('TIPESTCIVIL','CODPAISNACIONALIDAD'
,'DESTIPPROVINCIA','DIGITALIDAD')
orden_nivel_educacion <- c("ANA","NDI","PRI","SEC","FAR","TEI","TEC","SUP","BAC","LIC","TIT","MAE","DOC")
orden_vinculacion <- c("1. NADA VINCULADO","2. POCO VINCULADO",
"3. MEDIO VINCULADO","4. VINCULADO","5. MUY VINCULADO")
orden_riesgo <- c("A","B","C","D","E")
missing_continuos <- c('Banco1_DEUTOTAL','SBS_DEUTOTAL',
'Banco2_DEUTOTAL','Banco3_DEUTOTAL','Banco4_DEUTOTAL',
'OTROS_DEUTOTAL','CANTIDAD_PRODUCTOS')
index_na <- is.na(data_clean$SBS_DEUTOTAL)
data_clean$SBS_DEUTOTAL[index_na] <- mean(data_clean$SBS_DEUTOTAL[!index_na])
index_na <- is.na(data_clean$Banco1_DEUTOTAL)
data_clean$Banco1_DEUTOTAL[index_na] <- mean(data_clean$Banco1_DEUTOTAL[!index_na])
index_na <- is.na(data_clean$Banco2_DEUTOTAL)
data_clean$Banco2_DEUTOTAL[index_na] <- mean(data_clean$Banco2_DEUTOTAL[!index_na])
index_na <- is.na(data_clean$Banco3_DEUTOTAL)
data_clean$Banco3_DEUTOTAL[index_na] <- mean(data_clean$Banco3_DEUTOTAL[!index_na])
index_na <- is.na(data_clean$Banco4_DEUTOTAL)
data_clean$Banco4_DEUTOTAL[index_na] <- mean(data_clean$Banco4_DEUTOTAL[!index_na])
index_na <- is.na(data_clean$OTROS_DEUTOTAL)
data_clean$OTROS_DEUTOTAL[index_na] <- mean(data_clean$OTROS_DEUTOTAL[!index_na])
index_na <- is.na(data_clean$CANTIDAD_PRODUCTOS)
data_clean$CANTIDAD_PRODUCTOS[index_na] <- mean(data_clean$CANTIDAD_PRODUCTOS[!index_na])
data_clean <- na.omit(data_clean)
write_csv(data_clean,"data_clean_noimput.csv",rownames=FALSE)
library(tidyverse)
library(clustMD)
library(skimr)
encode_categorical <- function(x, order = unique(x)) {
x <- as.numeric(factor(x, levels = order, exclude = NULL))
x
}
columna_dummy <- function(df, columna) {
df %>%
mutate_at(columna, ~paste(columna, eval(as.symbol(columna)), sep = "_")) %>%
mutate(valor = 1) %>%
spread(key = columna, value = valor, fill = 0)
}
crear_dummies <- function(df, nombres) {
map(c(nombres), columna_dummy, df = df) %>%
reduce(inner_join) %>%
select(-c(nombres))
}
data <- read_csv("LimaBank_Data_Grupo1.csv")
data_clean<- data%>%
select(-CODIGO_CLIENTE,-EDAD_2)
skim(data_clean)
continuos_variables <- c ('INGRESO','EDAD','SBS_DEUTOTAL','Banco1_DEUTOTAL',
'Banco2_DEUTOTAL','Banco3_DEUTOTAL','Banco4_DEUTOTAL',
'OTROS_DEUTOTAL','CANTIDAD_PRODUCTOS')
binary_variables <- c('FORMAL','FLG_SBS_201909','FLG_MD_NEGATIVO',
'FLG_DEUDASBS','FLG_SEGUROS','FLG_ACTIVOS',
'FLG_PASIVOS','FLG_INVERSION','FLG_PASIV_INV')
ordinal_variables <- c('EDU','DIGITAL','TIPNIVELEDUCACIONAL',
'PERFIL_VINCULACION','SEMENTO_RIESGO')
nominal_variables <- c('TIPESTCIVIL','CODPAISNACIONALIDAD'
,'DESTIPPROVINCIA','DIGITALIDAD')
orden_nivel_educacion <- c("ANA","NDI","PRI","SEC","FAR","TEI","TEC","SUP","BAC","LIC","TIT","MAE","DOC")
orden_vinculacion <- c("1. NADA VINCULADO","2. POCO VINCULADO",
"3. MEDIO VINCULADO","4. VINCULADO","5. MUY VINCULADO")
orden_riesgo <- c("A","B","C","D","E")
missing_continuos <- c('Banco1_DEUTOTAL','SBS_DEUTOTAL',
'Banco2_DEUTOTAL','Banco3_DEUTOTAL','Banco4_DEUTOTAL',
'OTROS_DEUTOTAL','CANTIDAD_PRODUCTOS')
index_na <- is.na(data_clean$SBS_DEUTOTAL)
data_clean$SBS_DEUTOTAL[index_na] <- mean(data_clean$SBS_DEUTOTAL[!index_na])
index_na <- is.na(data_clean$Banco1_DEUTOTAL)
data_clean$Banco1_DEUTOTAL[index_na] <- mean(data_clean$Banco1_DEUTOTAL[!index_na])
index_na <- is.na(data_clean$Banco2_DEUTOTAL)
data_clean$Banco2_DEUTOTAL[index_na] <- mean(data_clean$Banco2_DEUTOTAL[!index_na])
index_na <- is.na(data_clean$Banco3_DEUTOTAL)
data_clean$Banco3_DEUTOTAL[index_na] <- mean(data_clean$Banco3_DEUTOTAL[!index_na])
index_na <- is.na(data_clean$Banco4_DEUTOTAL)
data_clean$Banco4_DEUTOTAL[index_na] <- mean(data_clean$Banco4_DEUTOTAL[!index_na])
index_na <- is.na(data_clean$OTROS_DEUTOTAL)
data_clean$OTROS_DEUTOTAL[index_na] <- mean(data_clean$OTROS_DEUTOTAL[!index_na])
index_na <- is.na(data_clean$CANTIDAD_PRODUCTOS)
data_clean$CANTIDAD_PRODUCTOS[index_na] <- mean(data_clean$CANTIDAD_PRODUCTOS[!index_na])
data_clean <- na.omit(data_clean)
write.csv(data_clean,"data_clean_noimput.csv",row.names=FALSE)
nrow(data_clean)
data_clean <- unique(data_clean)
nrow(data_clean)
library(tidyverse)
library(clustMD)
library(skimr)
encode_categorical <- function(x, order = unique(x)) {
x <- as.numeric(factor(x, levels = order, exclude = NULL))
x
}
columna_dummy <- function(df, columna) {
df %>%
mutate_at(columna, ~paste(columna, eval(as.symbol(columna)), sep = "_")) %>%
mutate(valor = 1) %>%
spread(key = columna, value = valor, fill = 0)
}
crear_dummies <- function(df, nombres) {
map(c(nombres), columna_dummy, df = df) %>%
reduce(inner_join) %>%
select(-c(nombres))
}
data <- read_csv("LimaBank_Data_Grupo1.csv")
data_clean<- data%>%
select(-CODIGO_CLIENTE,-EDAD_2)
skim(data_clean)
continuos_variables <- c ('INGRESO','EDAD','SBS_DEUTOTAL','Banco1_DEUTOTAL',
'Banco2_DEUTOTAL','Banco3_DEUTOTAL','Banco4_DEUTOTAL',
'OTROS_DEUTOTAL','CANTIDAD_PRODUCTOS')
binary_variables <- c('FORMAL','FLG_SBS_201909','FLG_MD_NEGATIVO',
'FLG_DEUDASBS','FLG_SEGUROS','FLG_ACTIVOS',
'FLG_PASIVOS','FLG_INVERSION','FLG_PASIV_INV')
ordinal_variables <- c('EDU','DIGITAL','TIPNIVELEDUCACIONAL',
'PERFIL_VINCULACION','SEMENTO_RIESGO')
nominal_variables <- c('TIPESTCIVIL','CODPAISNACIONALIDAD'
,'DESTIPPROVINCIA','DIGITALIDAD')
orden_nivel_educacion <- c("ANA","NDI","PRI","SEC","FAR","TEI","TEC","SUP","BAC","LIC","TIT","MAE","DOC")
orden_vinculacion <- c("1. NADA VINCULADO","2. POCO VINCULADO",
"3. MEDIO VINCULADO","4. VINCULADO","5. MUY VINCULADO")
orden_riesgo <- c("A","B","C","D","E")
missing_continuos <- c('Banco1_DEUTOTAL','SBS_DEUTOTAL',
'Banco2_DEUTOTAL','Banco3_DEUTOTAL','Banco4_DEUTOTAL',
'OTROS_DEUTOTAL','CANTIDAD_PRODUCTOS')
index_na <- is.na(data_clean$SBS_DEUTOTAL)
data_clean$SBS_DEUTOTAL[index_na] <- mean(data_clean$SBS_DEUTOTAL[!index_na])
index_na <- is.na(data_clean$Banco1_DEUTOTAL)
data_clean$Banco1_DEUTOTAL[index_na] <- mean(data_clean$Banco1_DEUTOTAL[!index_na])
index_na <- is.na(data_clean$Banco2_DEUTOTAL)
data_clean$Banco2_DEUTOTAL[index_na] <- mean(data_clean$Banco2_DEUTOTAL[!index_na])
index_na <- is.na(data_clean$Banco3_DEUTOTAL)
data_clean$Banco3_DEUTOTAL[index_na] <- mean(data_clean$Banco3_DEUTOTAL[!index_na])
index_na <- is.na(data_clean$Banco4_DEUTOTAL)
data_clean$Banco4_DEUTOTAL[index_na] <- mean(data_clean$Banco4_DEUTOTAL[!index_na])
index_na <- is.na(data_clean$OTROS_DEUTOTAL)
data_clean$OTROS_DEUTOTAL[index_na] <- mean(data_clean$OTROS_DEUTOTAL[!index_na])
index_na <- is.na(data_clean$CANTIDAD_PRODUCTOS)
data_clean$CANTIDAD_PRODUCTOS[index_na] <- mean(data_clean$CANTIDAD_PRODUCTOS[!index_na])
data_clean <- na.omit(data_clean)
#write.csv(data_clean,"data_clean_noimput.csv",row.names=FALSE)
nrow(data_clean)
data_clean$EDU <- as.numeric(factor(data_clean$EDU))
data_clean$DIGITAL <-as.numeric(factor(data_clean$DIGITAL))
data_clean$TIPNIVELEDUCACIONAL <- encode_categorical(data_clean$TIPNIVELEDUCACIONAL,orden_nivel_educacion)
data_clean$PERFIL_VINCULACION <- encode_categorical(data_clean$PERFIL_VINCULACION,orden_vinculacion)
data_clean$SEMENTO_RIESGO <- encode_categorical(data_clean$SEMENTO_RIESGO,orden_riesgo)
cod_peru_ven <- data_clean$CODPAISNACIONALIDAD=="PER" | data_clean$CODPAISNACIONALIDAD=="VEN"
data_clean$CODPAISNACIONALIDAD[!cod_peru_ven] <- "OTRO"
library(tidyverse)
library(clustMD)
library(skimr)
encode_categorical <- function(x, order = unique(x)) {
x <- as.numeric(factor(x, levels = order, exclude = NULL))
x
}
columna_dummy <- function(df, columna) {
df %>%
mutate_at(columna, ~paste(columna, eval(as.symbol(columna)), sep = "_")) %>%
mutate(valor = 1) %>%
spread(key = columna, value = valor, fill = 0)
}
crear_dummies <- function(df, nombres) {
map(c(nombres), columna_dummy, df = df) %>%
reduce(inner_join) %>%
select(-c(nombres))
}
data <- read_csv("LimaBank_Data_Grupo1.csv")
data_clean<- data%>%
select(-CODIGO_CLIENTE,-EDAD_2)
skim(data_clean)
continuos_variables <- c ('INGRESO','EDAD','SBS_DEUTOTAL','Banco1_DEUTOTAL',
'Banco2_DEUTOTAL','Banco3_DEUTOTAL','Banco4_DEUTOTAL',
'OTROS_DEUTOTAL','CANTIDAD_PRODUCTOS')
binary_variables <- c('FORMAL','FLG_SBS_201909','FLG_MD_NEGATIVO',
'FLG_DEUDASBS','FLG_SEGUROS','FLG_ACTIVOS',
'FLG_PASIVOS','FLG_INVERSION','FLG_PASIV_INV')
ordinal_variables <- c('EDU','DIGITAL','TIPNIVELEDUCACIONAL',
'PERFIL_VINCULACION','SEMENTO_RIESGO')
nominal_variables <- c('TIPESTCIVIL','CODPAISNACIONALIDAD'
,'DESTIPPROVINCIA','DIGITALIDAD')
orden_nivel_educacion <- c("ANA","NDI","PRI","SEC","FAR","TEI","TEC","SUP","BAC","LIC","TIT","MAE","DOC")
orden_vinculacion <- c("1. NADA VINCULADO","2. POCO VINCULADO",
"3. MEDIO VINCULADO","4. VINCULADO","5. MUY VINCULADO")
orden_riesgo <- c("A","B","C","D","E")
missing_continuos <- c('Banco1_DEUTOTAL','SBS_DEUTOTAL',
'Banco2_DEUTOTAL','Banco3_DEUTOTAL','Banco4_DEUTOTAL',
'OTROS_DEUTOTAL','CANTIDAD_PRODUCTOS')
index_na <- is.na(data_clean$SBS_DEUTOTAL)
data_clean$SBS_DEUTOTAL[index_na] <- mean(data_clean$SBS_DEUTOTAL[!index_na])
index_na <- is.na(data_clean$Banco1_DEUTOTAL)
data_clean$Banco1_DEUTOTAL[index_na] <- mean(data_clean$Banco1_DEUTOTAL[!index_na])
index_na <- is.na(data_clean$Banco2_DEUTOTAL)
data_clean$Banco2_DEUTOTAL[index_na] <- mean(data_clean$Banco2_DEUTOTAL[!index_na])
index_na <- is.na(data_clean$Banco3_DEUTOTAL)
data_clean$Banco3_DEUTOTAL[index_na] <- mean(data_clean$Banco3_DEUTOTAL[!index_na])
index_na <- is.na(data_clean$Banco4_DEUTOTAL)
data_clean$Banco4_DEUTOTAL[index_na] <- mean(data_clean$Banco4_DEUTOTAL[!index_na])
index_na <- is.na(data_clean$OTROS_DEUTOTAL)
data_clean$OTROS_DEUTOTAL[index_na] <- mean(data_clean$OTROS_DEUTOTAL[!index_na])
index_na <- is.na(data_clean$CANTIDAD_PRODUCTOS)
data_clean$CANTIDAD_PRODUCTOS[index_na] <- mean(data_clean$CANTIDAD_PRODUCTOS[!index_na])
cod_peru_ven <- data_clean$CODPAISNACIONALIDAD=="PER" | data_clean$CODPAISNACIONALIDAD=="VEN"
data_clean$CODPAISNACIONALIDAD[!cod_peru_ven] <- "OTRO"
data_clean <- na.omit(data_clean)
nrow(data_clean)
data_clean <- unique(data_clean)
nrow(data_clean)
write.csv(data_clean,"data_clean_noimput.csv",row.names=FALSE)
data
library(tidyverse)
library(lubridate)
library(xts)
library(forecast)
library(corrplot)
library(timetk)
library(tidyquant)
library(xgboost)
library(caret)
library(skimr)
library(tidymodels)
library(pander)
setwd("C:/Users/Christian/Desktop/Ciclo Cubi/Temas IOP/Proyecto-Limabank/Data")
clientes_limabank <- read_csv("Clientes_Limabank.csv")
datos_agencia <- read_csv("Datos_Agencia.csv")%>%
select(-GRUPO)
dates_agencia <- seq.Date(from=dmy("01-01-2014"),
to=dmy("01-03-2019"),by="month")
datos_agencia$INDICADOR <- c("ArribosTotales","TiempoEspera","TiempoAtencion",
"StaffTurnoMañana","StaffTurnoTarde","Ventas_1",
"Ventas_2","Ventas_3","Ventas_4")
xts_agencia<-datos_agencia%>%
gather(key = "Date", value = value, 2:ncol(datos_agencia)) %>%
spread_(key = names(datos_agencia)[1],value = 'value')%>%
select(-Date)%>%
xts(.,order.by = dates_agencia)
skim(coredata(xts_agencia))
xts_agencia$Ventas_2 <- na.approx(xts_agencia$Ventas_2)
xts_agencia$Ventas_3 <- na.approx(xts_agencia$Ventas_3)
xts_agencia$ArribosTotales <- na.approx(xts_agencia$ArribosTotales)
autoplot(xts_agencia[,c("StaffTurnoMañana","StaffTurnoTarde")])
autoplot(xts_agencia[,c("Ventas_1","Ventas_2","Ventas_3","Ventas_4")])
autoplot(xts_agencia[,c("TiempoEspera","TiempoAtencion")])
autoplot(xts_agencia[,c("ArribosTotales")])
fit_arima <- auto.arima(xts_agencia$ArribosTotales)
summary(fit_arima)
checkresiduals(fit_arima)
autoplot(forecast(fit_arima,h=9))
fit_ets <- ets(xts_agencia$ArribosTotales)
summary(fit_ets)
checkresiduals(fit_ets)
autoplot(forecast(fit_ets,h=9),ylab="")
simulate(fit_arima,future = TRUE,seed = 3)
cor.mtest <- function(mat, ...) {
mat <- as.matrix(mat)
n <- ncol(mat)
p.mat<- matrix(NA, n, n)
diag(p.mat) <- 0
for (i in 1:(n - 1)) {
for (j in (i + 1):n) {
tmp <- cor.test(mat[, i], mat[, j], ...)
p.mat[i, j] <- p.mat[j, i] <- tmp$p.value
}
}
colnames(p.mat) <- rownames(p.mat) <- colnames(mat)
p.mat
}
p.mat <- cor.mtest(xts_agencia)
corr_ts <-cor(xts_agencia)
col <- colorRampPalette(c("#BB4444", "#EE9988", "#FFFFFF", "#77AADD", "#4477AA"))
corrplot(corr_ts,type="upper", tl.srt=45,tl.col="black",
diag=FALSE,addCoef.col = "black",
p.mat = p.mat, sig.level = 0.01, insig = "blank",
method="color", col=col(200))
data <- tk_augment_timeseries_signature(xts_agencia)
TiempoEspera <- xts_agencia$TiempoEspera
data_arima <- cbind(xts_agencia,data$half)
fit_tiempo_espera <- auto.arima(data_arima$TiempoEspera,
xreg=data_arima[,c(1,3,10)])
summary(fit_tiempo_espera)
checkresiduals(fit_tiempo_espera)
agencia <- as.data.frame(coredata(xts_agencia))
data <- tk_augment_timeseries_signature(xts_agencia)
fit_lm_tiempo_espera <- stats::lm(TiempoEspera~.,data)
fit_lm_tiempo_espera
anova(fit_lm_tiempo_espera)
fit_lm <- lm(TiempoEspera~ArribosTotales+StaffTurnoTarde+half,data)
anova(fit_lm)
library(earth)
library(caTools)
library(pROC)
m1 <- earth(TiempoEspera~ArribosTotales+StaffTurnoTarde+half+TiempoAtencion,data=data,
nfold=10, ncross=30,varmod.method="lm",keepxy=TRUE)
summary(m1)
plot(m1)
plot(m1, which=1, col.rsq=0)
evimp(m1, trim=FALSE)
plotmo(m1)
par(mfrow=c(1,3))
nsimulations <- 1000
abril <- rep(0,nsimulations)
mayo <- rep(0,nsimulations)
junio <- rep(0,nsimulations)
for (i in 1:nsimulations){
test_data <- data.frame(ArribosTotales =c(simulate(fit_arima,future = TRUE,nsim = 3)),
StaffTurnoTarde=6,
half=1)
tiemposEspera_predicted <- predict(m1,test_data)
abril[i] <- tiemposEspera_predicted[1]
mayo[i] <- tiemposEspera_predicted[2]
junio[i] <-tiemposEspera_predicted[3]
}
par(mfrow=c(1,3))
hist(abril)
hist(mayo)
hist(junio)
hist(abril)
abril}
abril
test_data <- data.frame(ArribosTotales =c(simulate(fit_arima,future = TRUE,nsim = 3)),
StaffTurnoTarde=6,
half=1)
test_data
autoplot(xts_agencia[,c("TiempoEspera","TiempoAtencion","StaffTurnoTarde")])
m1 <- earth(TiempoEspera~ArribosTotales+StaffTurnoTarde+half,data=data,
nfold=10, ncross=30,varmod.method="lm",keepxy=TRUE)
nsimulations <- 1000
abril <- rep(0,nsimulations)
mayo <- rep(0,nsimulations)
junio <- rep(0,nsimulations)
for (i in 1:nsimulations){
test_data <- data.frame(ArribosTotales =c(simulate(fit_arima,future = TRUE,nsim = 3)),
StaffTurnoTarde=6,
half=1)
tiemposEspera_predicted <- predict(m1,test_data)
abril[i] <- tiemposEspera_predicted[1]
mayo[i] <- tiemposEspera_predicted[2]
junio[i] <-tiemposEspera_predicted[3]
}
par(mfrow=c(1,3))
hist(abril)
hist(mayo)
hist(junio)
autoplot(xts_agencia[,c("TiempoEspera","StaffTurnoTarde","TotalArribos","half")])
autoplot(data[,c("TiempoEspera","StaffTurnoTarde","TotalArribos","half")])
data
data[,c("TiempoEspera","StaffTurnoTarde","TotalArribos","half")]
data[,c("TiempoEspera","StaffTurnoTarde","TotalArribos")]
colnames(data)
data[,c("TiempoEspera","StaffTurnoTarde","ArribosTotales","half")]
pander(evimp(m1, trim=FALSE))
tidy(evimp(m1, trim=FALSE))
plot(m1, which=1, col.rsq=0,main="")
plot(m1, which=1, col.rsq=0)
mean(abril>10)
mean(mayo>10)
mean(junio>10)
pander(skim(data_agencia))
knit_with_parameters('C:/Users/Christian/Desktop/Ciclo Cubi/Temas IOP/Proyecto-Limabank/Forecast.Rmd', encoding = 'UTF-8')
