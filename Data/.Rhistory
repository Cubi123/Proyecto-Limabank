library(tidyverse)
library(lubridate)
library(xts)
library(forecast)
library(corrplot)
library(timetk)
library(tidyquant)
library(xgboost)
library(caret)
setwd("C:/Users/Christian/Desktop/Ciclo Cubi/Temas IOP/Proyecto-Limabank/Data")
clientes_limabank <- read_csv("Clientes_Limabank.csv")
datos_agencia <- read_csv("Datos_Agencia.csv")%>%
select(-GRUPO)
dates_agencia <- seq.Date(from=dmy("01-01-2014"),
to=dmy("01-03-2019"),by="month")
datos_agencia$INDICADOR <- c("ArribosTotales","TiempoEspera","TiempoAtencion",
"StaffTeleferico_TM","StaffTeleferico_TT","Ventas_1",
"Ventas_2","Ventas_3","Ventas_4")
xts_agencia<-datos_agencia%>%
gather(key = "Date", value = value, 2:ncol(datos_agencia)) %>%
spread_(key = names(datos_agencia)[1],value = 'value')%>%
select(-Date)%>%
xts(.,order.by = dates_agencia)
autoplot(xts_agencia[,c("StaffTeleferico_TM","StaffTeleferico_TT")])
autoplot(xts_agencia[,c("Ventas_1","Ventas_2","Ventas_3","Ventas_4")])
xts_agencia$Ventas_2 <- na.approx(xts_agencia$Ventas_2)
xts_agencia$Ventas_3 <- na.approx(xts_agencia$Ventas_3)
clientes_limabank <- read_csv("Clientes_Limabank.csv")
datos_agencia <- read_csv("Datos_Agencia.csv")%>%
select(-GRUPO)
dates_agencia <- seq.Date(from=dmy("01-01-2014"),
to=dmy("01-03-2019"),by="month")
datos_agencia$INDICADOR <- c("ArribosTotales","TiempoEspera","TiempoAtencion",
"StaffTurnoMañana","StaffTurnoTarde","Ventas_1",
"Ventas_2","Ventas_3","Ventas_4")
xts_agencia<-datos_agencia%>%
gather(key = "Date", value = value, 2:ncol(datos_agencia)) %>%
spread_(key = names(datos_agencia)[1],value = 'value')%>%
select(-Date)%>%
xts(.,order.by = dates_agencia)
dates_agencia <- seq.Date(from=dmy("01-01-2014"),
to=dmy("01-03-2019"),by="month")
datos_agencia$INDICADOR <- c("ArribosTotales","TiempoEspera","TiempoAtencion",
"StaffTurnoMañana","StaffTurnoTarde","Ventas_1",
"Ventas_2","Ventas_3","Ventas_4")
xts_agencia<-datos_agencia%>%
gather(key = "Date", value = value, 2:ncol(datos_agencia)) %>%
spread_(key = names(datos_agencia)[1],value = 'value')%>%
select(-Date)%>%
xts(.,order.by = dates_agencia)
glimpse(xts_agencia)
summary(coredata(xts_agencia))
install.packages("skimr")
library(skimr) #Summary variables
library(caret) #training
library(skimr) #Summary variables
skim(coredata(xts_agencia))
knitr::opts_chunk$set(echo = TRUE)
skim(coredata(xts_agencia))
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_chunk$set(echo = TRUE)
set.seed(111)
library(tidyverse)
library(lubridate)
library(xts)
library(forecast)
library(corrplot)
library(timetk)
library(tidyquant)
library(xgboost)
library(caret)
library(skimr)
clientes_limabank <- read_csv("Data/Clientes_Limabank.csv")
datos_agencia <- read_csv("Data/Datos_Agencia.csv")%>%
select(-GRUPO)
dates_agencia <- seq.Date(from=dmy("01-01-2014"),
to=dmy("01-03-2019"),by="month")
datos_agencia$INDICADOR <- c("ArribosTotales","TiempoEspera","TiempoAtencion",
"StaffTurnoMañana","StaffTurnoTarde","Ventas_1",
"Ventas_2","Ventas_3","Ventas_4")
xts_agencia<-datos_agencia%>%
gather(key = "Date", value = value, 2:ncol(datos_agencia)) %>%
spread_(key = names(datos_agencia)[1],value = 'value')%>%
select(-Date)%>%
xts(.,order.by = dates_agencia)
install.packages('pander')
library(pander)
install.packages('pander')
install.packages("pander")
library(pander)
setwd("C:/Users/Christian/Desktop/Ciclo Cubi/Temas IOP/Proyecto-Limabank/Data")
clientes_limabank <- read_csv("Clientes_Limabank.csv")
set.seed(111)
library(tidyverse)
library(lubridate)
library(xts)
library(forecast)
library(corrplot)
library(timetk)
library(tidyquant)
library(xgboost)
library(caret)
library(skimr)
library(pander)
clientes_limabank <- read_csv("Clientes_Limabank.csv")
setwd("C:/Users/Christian/Desktop/Ciclo Cubi/Temas IOP/Proyecto-Limabank/Data")
clientes_limabank <- read_csv("Clientes_Limabank.csv")
datos_agencia <- read_csv("Datos_Agencia.csv")%>%
select(-GRUPO)
dates_agencia <- seq.Date(from=dmy("01-01-2014"),
to=dmy("01-03-2019"),by="month")
datos_agencia$INDICADOR <- c("ArribosTotales","TiempoEspera","TiempoAtencion",
"StaffTurnoMañana","StaffTurnoTarde","Ventas_1",
"Ventas_2","Ventas_3","Ventas_4")
xts_agencia<-datos_agencia%>%
gather(key = "Date", value = value, 2:ncol(datos_agencia)) %>%
spread_(key = names(datos_agencia)[1],value = 'value')%>%
select(-Date)%>%
xts(.,order.by = dates_agencia)
table_eda <- skim(coredata(xts_agencia))
table_eda$skim_variable
table_eda$skim_type
pandoc.table(table_eda, style = "grid", caption = "EDA Agencias")
skim(coredata(xts_agencia))
autoplot(xts_agencia[,c("StaffTeleferico_TM","StaffTeleferico_TT")],colours=c(1,2))
autoplot(xts_agencia[,c("StaffTeleferico_TM","StaffTeleferico_TT")],colours=c(1,2)))
autoplot(xts_agencia[,c("StaffTeleferico_TM","StaffTeleferico_TT")],colours=c(1,2))
autoplot(xts_agencia[,c("StaffTeleferico_TM","StaffTeleferico_TT")],col=c(1,2))
autoplot(xts_agencia[,c("StaffTurnoMañana","StaffTurnoTarde")],col=c(1,2))
autoplot(xts_agencia[,c("StaffTurnoMañana","StaffTurnoTarde")],colour=c(1,2))
autoplot(xts_agencia[,c("StaffTurnoMañana","StaffTurnoTarde")],colours=c(1,2))
autoplot(xts_agencia[,c("StaffTurnoMañana","StaffTurnoTarde")],colour=2)
xts_agencia$Ventas_2 <- na.approx(xts_agencia$Ventas_2)
xts_agencia$Ventas_3 <- na.approx(xts_agencia$Ventas_3)
xts_agencia$ArribosTotales <- na.approx(xts_agencia$ArribosTotales)
autoplot(xts_agencia[,c("StaffTurnoMañana","StaffTurnoTarde")])
autoplot(xts_agencia[,c("Ventas_1","Ventas_2","Ventas_3","Ventas_4")])
autoplot(xts_agencia[,c("TiempoEspera","TiempoAtencion")])
autoplot(xts_agencia[,c("ArribosTotales")])
acf(xts_agencia$ArribosTotales)
fit_arima <- auto.arima(xts_agencia$ArribosTotales)
summary(fit_arima)
install.packages("tidymodels")
install.packages("tidymodels")
install.packages("tidymodels")
library(tidymodels)
install.packages("tidymodels")
install.packages("tidymodels")
library(tidymodels)
tidy(fit_arima)
tidy(fit_arima$model)
tidy(fit_arima)
fit_arima
fit_arima <- auto.arima(xts_agencia$ArribosTotales)
summary(fit_arima)
checkresiduals(fit_arima)
autoplot(forecast(fit_arima,h=9))
library(tidyverse)
library(lubridate)
library(xts)
library(forecast)
library(corrplot)
library(timetk)
library(tidyquant)
library(xgboost)
library(caret)
library(skimr)
library(tidymodels)
library(pander)
library(tidyverse)
library(lubridate)
library(xts)
library(forecast)
library(corrplot)
library(timetk)
library(tidyquant)
library(xgboost)
library(caret)
library(skimr)
library(tidymodels)
library(pander)
checkresiduals(fit_arima)
tidy(checkresiduals(fit_arima))
fit_ets <- ets(xts_agencia$ArribosTotales)
summary(fit_ets)
checkresiduals(fit_ets)
autoplot(forecast(fit_ets,h=9),ylab="")
simulate(fit_arima,future = TRUE)
simulate(fit_arima,future = TRUE,nsim = 9)
simulate(fit_arima,future = TRUE,nsim = 9)
forecast(fit_arima,h=9)
simulate(fit_arima,future = TRUE,nsim = 9)
simulate(fit_arima,future = TRUE,nsim = 9)
simulate(fit_arima,future = TRUE,nsim = 9)
simulate(fit_ets,future = TRUE,nsim = 9)
simulate(fit_ets,future = TRUE,nsim = 9)
simulate(fit_ets,future = TRUE,nsim = 9)
simulate(fit_arima,future = TRUE,nsim = 3)
simulate(fit_arima,future = TRUE,nsim = 3)
simulate(fit_arima,future = TRUE,nsim = 3)
cor.mtest <- function(mat, ...) {
mat <- as.matrix(mat)
n <- ncol(mat)
p.mat<- matrix(NA, n, n)
diag(p.mat) <- 0
for (i in 1:(n - 1)) {
for (j in (i + 1):n) {
tmp <- cor.test(mat[, i], mat[, j], ...)
p.mat[i, j] <- p.mat[j, i] <- tmp$p.value
}
}
colnames(p.mat) <- rownames(p.mat) <- colnames(mat)
p.mat
}
cor.mtest <- function(mat, ...) {
mat <- as.matrix(mat)
n <- ncol(mat)
p.mat<- matrix(NA, n, n)
diag(p.mat) <- 0
for (i in 1:(n - 1)) {
for (j in (i + 1):n) {
tmp <- cor.test(mat[, i], mat[, j], ...)
p.mat[i, j] <- p.mat[j, i] <- tmp$p.value
}
}
colnames(p.mat) <- rownames(p.mat) <- colnames(mat)
p.mat
}
p.mat <- cor.mtest(xts_agencia)
corr_ts <-cor(xts_agencia)
col <- colorRampPalette(c("#BB4444", "#EE9988", "#FFFFFF", "#77AADD", "#4477AA"))
corrplot(corr_ts,type="upper", tl.srt=45,tl.col="black",
diag=FALSE,addCoef.col = "black",
p.mat = p.mat, sig.level = 0.01, insig = "blank",
method="color", col=col(200))
TiempoEspera <- xts_agencia$TiempoEspera
fit_tiempo_espera <- auto.arima(xts_agencia$TiempoEspera,
xreg=xts_agencia[,-5])
summary(fit_tiempo_espera)
ggtsdisplay(arima.errors(fit_tiempo_espera),
main="ARIMA errors")
ggtsdisplay(residuals(fit_tiempo_espera),
main="ARIMA residuals")
data <- tk_augment_timeseries_signature(xts_agencia)
data <- tk_augment_timeseries_signature(xts_agencia)
str(data)
(TiempoEspera~.,data)
fit_lm_tiempo_espera <- lm(TiempoEspera~.,data)
fit_lm_tiempo_espera
fit_lm_tiempo_espera <- stats::lm(TiempoEspera~.,data)
fit_lm_tiempo_espera
anova(fit_lm_tiempo_espera)
fit_lm <- lm(TiempoEspera~ArribosTotales+StaffTurnoTarde+TiempoAtencion+half,data)
fit_lm
annova
anova(fit_lm)
fit_lm <- lm(TiempoEspera~ArribosTotales+StaffTurnoTarde+StaffTurnoMañana+half,data)
anova(fit_lm)
fit_lm <- lm(TiempoEspera~ArribosTotales+StaffTurnoTarde+half,data)
anova(fit_lm)
simulate(fit_arima,future = TRUE,seed = 3)
data$half
library(earth)
install.packages("earth")
hist(data$TiempoEspera)
data$TiempoEspera
hist(log(data$TiempoEspera))
hist(data$TiempoEspera)
AIC(fit_lm_tiempo_espera)
AIC(fit_lm)
library(earth)
m1 <- earth(TiempoEspera~ArribosTotales+StaffTurnoTarde+half,data=data,
nfold=10, ncross=30,varmod.method="lm",keepxy=TRUE)
m1
summary(m1)
plot(m1)
plot(m1, which=1, col.rsq=0)
evimp(m1, trim=FALSE)
plotmo(m1)
aic(m1)
AIC(m1)
m1
summary(m1)
tail(data$StaffTurnoTarde)
data$StaffTurnoTarde
c(simulate(fit_arima,future = TRUE,nsim = 3))
set.seed(111)
simulate(fit_arima,future = TRUE,nsim = 3)
simulate(fit_arima,future = TRUE,nsim = 3)
simulate(fit_arima,future = TRUE,nsim = 3)
simulate(fit_arima,future = TRUE,nsim = 3)
simulate(fit_arima,future = TRUE,nsim = 3)
test_data$ArribosTotales <- c(simulate(fit_arima,future = TRUE,nsim = 3))
test_data <- NULL
test_data$ArribosTotales <- c(simulate(fit_arima,future = TRUE,nsim = 3))
test_data$StaffTurnoTarde <- 6
test_data$half <- 1
test_data
test_data <- as.data.frame()
test_data <- as.data.frame(NULL)
test_data$ArribosTotales <- c(simulate(fit_arima,future = TRUE,nsim = 3))
test_data <- data.frame(matrix(nrow = 3,ncol = 3),colnames=c("ArribosTotales","StaffTurnoTarde","half"))
test_data$ArribosTotales <- c(simulate(fit_arima,future = TRUE,nsim = 3))
test_data$StaffTurnoTarde <- 6
test_data$half <- 1
test_data
test_data <- data.frame(colnames=c("ArribosTotales","StaffTurnoTarde","half"))
test_data$ArribosTotales <- c(simulate(fit_arima,future = TRUE,nsim = 3))
test_data$StaffTurnoTarde <- 6
test_data$half <- 1
test_data
test_data <- data.frame(col.names=c("ArribosTotales","StaffTurnoTarde","half"))
test_data$ArribosTotales <- c(simulate(fit_arima,future = TRUE,nsim = 3))
test_data$StaffTurnoTarde <- 6
test_data$half <- 1
test_data
half=1)
test_data <- data.frame(ArribosTotales =c(simulate(fit_arima,future = TRUE,nsim = 3),
StaffTurnoTarde=6,
half=1))
test_data
test_data <- data.frame(ArribosTotales =c(simulate(fit_arima,future = TRUE,nsim = 3)),
StaffTurnoTarde=6,
half=1))
test_data <- data.frame(ArribosTotales =c(simulate(fit_arima,future = TRUE,nsim = 3)),
StaffTurnoTarde=6,
half=1)
test_data
tiemposEspera_predicted <- predict(m1,test_data)
tiemposEspera_predicted
test_data <- data.frame(ArribosTotales =c(simulate(fit_arima,future = TRUE,nsim = 3)),
StaffTurnoTarde=6,
half=1)
tiemposEspera_predicted <- predict(m1,test_data)
tiemposEspera_predicted
test_data
tiemposEspera_predicted <- predict(m1,test_data,type = "response")
tiemposEspera_predicted
test_data <- data.frame(ArribosTotales =c(simulate(fit_arima,future = TRUE,nsim = 3)),
StaffTurnoTarde=10,
half=1)
tiemposEspera_predicted <- predict(m1,test_data)
tiemposEspera_predicted
test_data <- data.frame(ArribosTotales =c(simulate(fit_arima,future = TRUE,nsim = 3)),
StaffTurnoTarde=2,
half=1)
tiemposEspera_predicted <- predict(m1,test_data)
tiemposEspera_predicted
test_data <- data.frame(ArribosTotales =c(simulate(fit_arima,future = TRUE,nsim = 3)),
StaffTurnoTarde=8,
half=1)
tiemposEspera_predicted <- predict(m1,test_data)
tiemposEspera_predicted
anova(fit_lm_tiempo_espera)
fit_lm_tiempo_espera
autoplot(data[,c("TiempoEspera","ArribosTotales")])
autoplot(data[,c("TiempoEspera")])
autoplot(data[,c("TiempoEspera")])
par(mfrow=c(2,2))
par(mfrow=c(2,2))
autoplot(data[,c("TiempoEspera")])
autoplot(data[,c("ArribosTotales")])
autoplot(data[,c("StaffTurnoTarde")])
autoplot(data[,c("half")])
par(mfrow=c(2,2))
autoplot(data[,c("TiempoEspera")])
autoplot(data[,c("ArribosTotales")])
autoplot(data[,c("StaffTurnoTarde")])
autoplot(data[,c("StaffTurnoMañana")])
autoplot(data[,c("TiempoEspera")])
autoplot(data[,c("TiempoEspera","StaffTurnoTarde","StaffTurnoMañana")])
tiemposEspera_predicted[1]
rep(0,100)
nsimulations <- 100
abril <- rep(0,nsimulations)
mayo <- rep(0,nsimulations)
junio <- rep(0,nsimulations)
for (i in 1:nsimulations){
test_data <- data.frame(ArribosTotales =c(simulate(fit_arima,future = TRUE,nsim = 3)),
StaffTurnoTarde=8,
half=1)
tiemposEspera_predicted <- predict(m1,test_data)
abril[i] <- tiemposEspera_predicted[1]
mayo[i] <- tiemposEspera_predicted[2]
junio[i] <-tiemposEspera_predicted[3]
}
hist(abril)
nsimulations <- 1000
abril <- rep(0,nsimulations)
mayo <- rep(0,nsimulations)
junio <- rep(0,nsimulations)
for (i in 1:nsimulations){
test_data <- data.frame(ArribosTotales =c(simulate(fit_arima,future = TRUE,nsim = 3)),
StaffTurnoTarde=8,
half=1)
tiemposEspera_predicted <- predict(m1,test_data)
abril[i] <- tiemposEspera_predicted[1]
mayo[i] <- tiemposEspera_predicted[2]
junio[i] <-tiemposEspera_predicted[3]
}
hist(abril)
hist(abril)
hist(abril)
hist(abril)
hist(mayo)
hist(junio)
nsimulations <- 1000
abril <- rep(0,nsimulations)
mayo <- rep(0,nsimulations)
junio <- rep(0,nsimulations)
for (i in 1:nsimulations){
test_data <- data.frame(ArribosTotales =c(simulate(fit_arima,future = TRUE,nsim = 3)),
StaffTurnoTarde=6,
half=1)
tiemposEspera_predicted <- predict(m1,test_data)
abril[i] <- tiemposEspera_predicted[1]
mayo[i] <- tiemposEspera_predicted[2]
junio[i] <-tiemposEspera_predicted[3]
}
par(mfrow=c(1,3))
hist(abril)
hist(mayo)
hist(junio)
